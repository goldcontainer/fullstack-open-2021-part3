{"version":3,"sources":["components/People.js","components/Notification.js","components/Form.js","services/persons.js","App.js","index.js"],"names":["People","persons","filter","filteredPersons","toggleDelete","map","person","name","Notification","message","messageType","className","Form","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","value","onChange","type","baseUrl","exportObj","getAll","axios","get","then","response","data","create","newPerson","post","update","id","put","deletePerson","delete","Header","props","text","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setFilteredPersons","setMessage","setMessageType","useEffect","personService","event","target","filterList","toLowerCase","includes","preventDefault","personObj","number","found","find","undefined","window","confirm","changedPerson","catch","error","setTimeout","concat","deletedPerson","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fab59d7f.chunk.js","sourcesContent":["import React from 'react'\nimport Person from './Person'\n\nconst People = ({ persons, filter, filteredPersons, toggleDelete }) => (\n\t\t<div>\n\t\t\t{filter === \"\"\n\t\t\t\t? persons?.map(person => {\n\t\t\t\t\t<Person\n\t\t\t\t\t\tkey={person.name}\n\t\t\t\t\t\tperson={person}\n\t\t\t\t\t\ttoggleDelete={toggleDelete}\n\t\t\t\t\t\t/>\n\t\t\t\t\t})\n\t\t\t\t: filteredPersons?.map(person => {\n\t\t\t\t\t<Person\n\t\t\t\t\t\tkey={person.name}\n\t\t\t\t\t\tperson={person}\n\t\t\t\t\t\ttoggleDelete={toggleDelete}\n\t\t\t\t\t\t/>\t\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t\n)\n\nexport default People","import React from 'react'\n\nconst Notification = ({ message, messageType }) => {\n\tif(message === null) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className={messageType}>\n\t\t\t{message}\n\t\t</div>\n\t)\n}\n\nexport default Notification","import React from 'react'\n\nconst Form = ({ onSubmit, newName, handleNameChange, newNumber, handleNumberChange }) => {\n\t\n\treturn (\n\t<form onSubmit={onSubmit}>\n    <div>name: <input value={newName} onChange={handleNameChange} /></div>\n      <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n  </form>\n  )\n}\n\nexport default Form","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl)\n\treturn request.then(response => response.data)\n}\n\nconst create = (newPerson) => {\n\treturn axios.post(baseUrl, newPerson)\n}\n\nconst update = (id, newPerson) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newPerson)\n\treturn request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n\tconst request = axios.delete(`${baseUrl}/${id}`)\n\treturn request.then(response => response.data)\n}\n\nconst exportObj = {\n\tgetAll,\n\tcreate,\n\tupdate,\n\tdeletePerson\n}\n\nexport default exportObj","import React, { useState, useEffect } from 'react'\nimport People from './components/People'\nimport Notification from './components/Notification'\nimport Form from './components/Form'\n\nimport personService from './services/persons'\n\nconst Header = (props) => <h2>{props.text}</h2>\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  // used for storing user-submitted inputs\n  // setting the value attr of the input tag without an event handler\n  // causes the App to control the behavior of the input element\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber] = useState('');\n  const [ filter, setNewFilter ] = useState('');\n  const [ filteredPersons, setFilteredPersons ] = useState(null);\n  const [ message, setMessage ] = useState(null);\n  const [ messageType, setMessageType ] = useState('');\n\n  useEffect(() => {\n    personService.getAll().then(response => {\n      setPersons(response);\n    })\n  }, [])\n\n  const handleFilterChange = (event) => {\n    // console.log(event.target.value);\n    setNewFilter(event.target.value);\n    const filterList = persons.filter(person => \n      person.name.toLowerCase().includes(event.target.value.toLowerCase()));\n    setFilteredPersons(filterList);\n  }\n\n  const handleNameChange = (event) => {\n    // console.log(event.target.value);\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    // console.log(event.target.value);\n    setNewNumber(event.target.value);\n  }\n\n  const toggleDelete = (person) => {\n    if(window.confirm(`Delete ${person.name}?`)) {\n      const deletedPerson = persons.find(p => p.id === person.id)\n\n      personService.deletePerson(deletedPerson.id)\n      setPersons(persons.filter(p => p.id !== person.id))\n\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const personObj = {\n        name: newName,\n        number: newNumber,\n    };\n\n    const found = persons.find(person => person.name === newName);\n\n    if (found !== undefined) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n\n        const changedPerson = { ...found, number: personObj.number}\n\n        personService\n          .update(found.id, changedPerson).then(response => {\n            setPersons(persons.map(person => person.id !== found.id ? person : changedPerson))\n          })\n          .catch(error => {\n            setMessage(`${personObj.name} does not exist in phonebook`\n            )\n            setMessageType('error')\n            setTimeout(() => {\n              setMessage(null);\n              setMessageType('');\n            }, 5000)\n          })\n\n        setMessage(`Changed ${personObj.name}'s number`);\n        setMessageType('notification')\n        setTimeout(() => {\n          setMessage(null);\n          setMessageType('')\n        }, 5000);\n      }\n    } else {\n\n      personService\n        .create(personObj)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setNewNumber('')\n        })\n\n      setPersons(persons.concat(personObj));\n      setNewName('');\n      setNewNumber('');\n      setMessage(`Added ${personObj.name}`);\n      setMessageType('notification')\n\n      // setTimeout function calls the setMessage function after 5 seconds, which sets the message to value null\n      setTimeout(() =>  {\n        setMessage(null);\n        setMessageType('');\n      }, 5000);\n    }\n  }\n\n  return (\n    <div>\n      <Header text='Phonebook' />\n      <Notification message={message} messageType={messageType} />\n      <div>filter shown with <input value={filter} onChange={handleFilterChange}/></div>\n      \n      <Header text='Add a New Contact' />\n      <Form \n        onSubmit={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <Header text='Numbers' />\n\n      <People\n        person={persons}\n        filter={filter}\n        filteredPersons={filteredPersons}\n        toggleDelete={toggleDelete}\n      />\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}