{"version":3,"sources":["components/Person.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","props","name","number","onClick","toggleDelete","id","Notification","message","messageType","className","baseUrl","exportObj","getAll","axios","get","create","newPerson","post","update","put","then","response","data","deletePerson","delete","Header","text","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setNewFilter","setMessage","setMessageType","useEffect","personService","filterList","person","toLowerCase","includes","value","onChange","event","target","onSubmit","preventDefault","personObj","found","find","undefined","window","confirm","changedPerson","map","catch","error","setTimeout","concat","type","deletedPerson","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f76bce2.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Person = (props) => {\n\n\treturn (\n\t\t<li key={props.id}>\n\t\t\t{props.name} {props.number} <button onClick={props.toggleDelete}>delete</button>\n\t\t</li>\n\t)\n}\n\nexport default Person","import React from 'react'\n\nconst Notification = ({ message, messageType }) => {\n\tif(message === null) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className={messageType}>\n\t\t\t{message}\n\t\t</div>\n\t)\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n\treturn axios.get(baseUrl)\n}\n\nconst create = newPerson => {\n\treturn axios.post(baseUrl, newPerson)\n}\n\nconst update = (id, newPerson) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newPerson)\n\treturn request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n\treturn axios.delete(`${baseUrl}/${id}`)\n}\n\nconst exportObj = {\n\tgetAll,\n\tcreate,\n\tupdate,\n\tdeletePerson\n}\n\nexport default exportObj","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport Notification from './components/Notification'\n\nimport personService from './services/persons'\n\nconst Header = (props) => <h2>{props.text}</h2>\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n\n  // used for storing user-submitted inputs\n  // setting the vallue attr of the input tag without an event handler\n  // causes the App to control the behavior of the input element\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber] = useState('');\n  const [ filter, setNewFilter ] = useState('');\n  const [ message, setMessage ] = useState(null);\n  const [ messageType, setMessageType ] = useState('');\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  // array of filtered people\n  const filterList = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()));\n\n  const handleFilterChange = (event) => {\n    // console.log(event.target.value);\n    setNewFilter(event.target.value);\n  }\n\n  const handleNameChange = (event) => {\n    // console.log(event.target.value);\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    // console.log(event.target.value);\n    setNewNumber(event.target.value);\n  }\n\n  const toggleDelete = (person) => {\n    if(window.confirm(`Delete ${person.name}?`)) {\n      const deletedPerson = persons.find(p => p.id === person.id)\n\n      personService.deletePerson(deletedPerson.id)\n      setPersons(persons.filter(p => p.id !== person.id))\n\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const personObj = {\n        name: newName,\n        number: newNumber,\n    };\n\n    const found = persons.find(person => person.name === newName);\n\n    if (found !== undefined) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n\n        const changedPerson = { ...found, number: personObj.number}\n\n        personService\n          .update(found.id, changedPerson).then(response => {\n            setPersons(persons.map(person => person.id !== found.id ? person : changedPerson))\n          })\n          .catch(error => {\n            setMessage(`${personObj.name} does not exist in phonebook`\n            )\n            setMessageType('error')\n            setTimeout(() => {\n              setMessage(null);\n              setMessageType('');\n            }, 5000)\n          })\n\n        setMessage(`Changed ${personObj.name}'s number`);\n        setMessageType('notification')\n        setTimeout(() => {\n          setMessage(null);\n          setMessageType('')\n        }, 5000);\n      }\n    } else {\n\n      personService\n        .create(personObj)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setNewNumber('')\n        })\n\n      setPersons(persons.concat(personObj));\n      setNewName('');\n      setNewNumber('');\n      setMessage(`Added ${personObj.name}`);\n      setMessageType('notification')\n\n      // setTimeout function calls the setMessage function after 5 seconds, which sets the message to value null\n      setTimeout(() =>  {\n        setMessage(null);\n        setMessageType('');\n      }, 5000);\n    }\n  }\n\n  return (\n    <div>\n      <Header text='Phonebook' />\n      <Notification message={message} messageType={messageType} />\n      <div>filter shown with <input value={filter} onChange={handleFilterChange}/></div>\n      \n      <Header text='Add a New Contact' />\n      <form onSubmit={addPerson}>\n        <div>name: <input value={newName} onChange={handleNameChange} /></div>\n        <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <Header text='Numbers' />\n      <div>\n      {filterList.map(person =>\n        <Person key={person.id} name={person.name} number={person.number} toggleDelete={() => toggleDelete(person)}/>\n      )}\n      </div>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}